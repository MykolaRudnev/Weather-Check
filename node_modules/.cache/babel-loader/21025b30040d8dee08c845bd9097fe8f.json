{"ast":null,"code":"var _jsxFileName = \"E:\\\\JavaScriptanHtmlCss\\\\React.js\\\\fromyoutube\\\\cities\\\\src\\\\App.js\";\nimport React from 'react';\nimport Info from './Components/info';\nimport Form from './Components/form';\nimport Weather from './Components/weather';\nconst API_KYE = \"bc8f03b6b4684d6cf90e56f6ee16f9bc\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sanrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city === true) {\n        const api_url = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KYE, \"&units=metric\"));\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        Date.setTime(sunset);\n        var sunset_date = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\JavaScriptanHtmlCss\\React.js\\fromyoutube\\cities\\src\\App.js"],"names":["React","Info","Form","Weather","API_KYE","App","Component","state","temp","undefined","city","country","sanrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","sunrise","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,OAAO,EAAEH,SAJH;AAKNI,MAAAA,MAAM,EAAEJ,SALF;AAMNK,MAAAA,KAAK,EAAEL;AAND,KAFuB;;AAAA,SAW/BM,cAX+B,GAWd,MAAOC,CAAP,IAAY;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;;AAGA,UAAGV,IAAI,KAAK,IAAZ,EAAiB;AACf,cAAMW,OAAO,GAAG,MAAMC,KAAK,4DAAqDZ,IAArD,oBAAmEN,OAAnE,mBAA3B;AACA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAA,QAAAA,IAAI,CAACC,OAAL,CAAaf,MAAb;AACA,YAAIgB,WAAW,GAAGH,IAAI,CAACI,QAAL,KAAkB,GAAlB,GAAuBJ,IAAI,CAACK,UAAL,EAAvB,GAA2C,GAA3C,GAAiDL,IAAI,CAACM,UAAL,EAAnE;AAEA,aAAKC,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAEe,IAAI,CAACW,IAAL,CAAU1B,IADJ;AAEZE,UAAAA,IAAI,EAAEa,IAAI,CAACY,IAFC;AAGZxB,UAAAA,OAAO,EAAEY,IAAI,CAACE,GAAL,CAASd,OAHN;AAIZyB,UAAAA,OAAO,EAAEb,IAAI,CAACE,GAAL,CAASW,OAJN;AAKZvB,UAAAA,MAAM,EAAEU,IAAI,CAACE,GAAL,CAASZ,MALL;AAMZC,UAAAA,KAAK,EAAE;AANK,SAAd;AAUD;AAGF,KAtC8B;AAAA;;AAwC/BuB,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKtB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AACC,MAAA,IAAI,EAAI,KAAKR,KAAL,CAAWC,IADpB;AAEC,MAAA,IAAI,EAAI,KAAKD,KAAL,CAAWG,IAFpB;AAGC,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWI,OAHvB;AAIC,MAAA,OAAO,EAAI,KAAKJ,KAAL,CAAW6B,OAJvB;AAKC,MAAA,MAAM,EAAI,KAAK7B,KAAL,CAAWM,MALtB;AAMC,MAAA,KAAK,EAAI,KAAKN,KAAL,CAAWO,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF;AAeD;;AAxD8B;;AA2DjC,eAAgBT,GAAhB","sourcesContent":["import React from 'react';\nimport Info from './Components/info';\nimport Form from './Components/form';\nimport Weather from './Components/weather';\n\nconst API_KYE = \"bc8f03b6b4684d6cf90e56f6ee16f9bc\";\n\nclass App extends React.Component{\n\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    sanrise: undefined,\n    sunset: undefined,\n    error: undefined\n  }\n\n  gettingWeather = async (e) =>{\n    e.preventDefault(); \n    const city = e.target.elements.city.value;\n \n  \n    if(city === true){\n      const api_url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KYE}&units=metric`);\n      const data = await api_url.json();\n\n      var sunset = data.sys.sunset;\n      var date = new Date();\n      Date.setTime(sunset);\n      var sunset_date = date.getHours() + ':' +date.getMinutes() + ':' + date.getSeconds();\n\n      this.setState({\n        temp: data.main.temp, \n        city: data.name,\n        country: data.sys.country,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        error: \"\"\n      });\n\n\n    }\n\n    \n  }\n\n  render(){\n    return(\n      <div>\n          <Info />\n          <Form weatherMethod={this.gettingWeather}/>\n          <Weather\n           temp = {this.state.temp}\n           city = {this.state.city}\n           country = {this.state.country}\n           sunrise = {this.state.sunrise}\n           sunset = {this.state.sunset}\n           error = {this.state.error} \n           />\n      </div>\n\n    )\n  }\n}\n\nexport default  App;"]},"metadata":{},"sourceType":"module"}